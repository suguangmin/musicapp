{"remainingRequest":"/Users/gm/Desktop/音乐前端/musicapp/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/gm/Desktop/音乐前端/musicapp/src/views/ListView.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/gm/Desktop/音乐前端/musicapp/src/views/ListView.vue","mtime":1628887020319},{"path":"/Users/gm/Desktop/音乐前端/musicapp/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/gm/Desktop/音乐前端/musicapp/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/gm/Desktop/音乐前端/musicapp/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/gm/Desktop/音乐前端/musicapp/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCB7Z2V0UGxheWxpc3REZXRhaWx9IGZyb20gJ0AvYXBpL2luZGV4LmpzJwppbXBvcnQge29uTW91bnRlZCxyZWFjdGl2ZX0gZnJvbSAndnVlJwppbXBvcnQge3VzZVJvdXRlfSBmcm9tICd2dWUtcm91dGVyJwppbXBvcnQgbGlzdHZpZXdUb3AgZnJvbSAnQC9jb21wb25lbnRzL2xpc3R2aWV3VG9wLnZ1ZScKaW1wb3J0IHBsYXlMaXN0IGZyb20gJ0AvY29tcG9uZW50cy9wbGF5TGlzdC52dWUnCmltcG9ydCBzdG9yZSBmcm9tICdAL3N0b3JlL2luZGV4LmpzJwoKZXhwb3J0IGRlZmF1bHQgewogICAgc2V0dXAoKSB7CiAgICAgICAgY29uc3Qgcm91dGUgPSB1c2VSb3V0ZSgpOwogICAgICAgIGxldCBzdGF0ZSA9IHJlYWN0aXZlKHsKICAgICAgICAgICAgbGlzdDpbXSwKICAgICAgICAgICAgcGxheWxpc3Q6ewogICAgICAgICAgICAgICAgY3JlYXRvcjoge30sCiAgICAgICAgICAgICAgICB0cmFja3M6IFtdCiAgICAgICAgICAgIH0KICAgICAgICB9KQogICAgICAgIG9uTW91bnRlZChhc3luYyAoKSA9PiB7CiAgICAgICAgICAgIGNvbnNvbGUubG9nKHJvdXRlKQogICAgICAgICAgICBsZXQgaWQgPSByb3V0ZS5xdWVyeS5pZDsKICAgICAgICAgICAgbGV0IHJlc3VsdCA9IGF3YWl0IGdldFBsYXlsaXN0RGV0YWlsKGlkKTsKICAgICAgICAgICAgc3RhdGUucGxheWxpc3QgPSByZXN1bHQuZGF0YS5wbGF5bGlzdDsKICAgICAgICAgICAgc3RvcmUuY29tbWl0KCdzZXRQbGF5bGlzdCcsc3RhdGUucGxheWxpc3QudHJhY2tzKQogICAgICAgICAgICBjb25zb2xlLmxvZyhyZXN1bHQpCiAgICAgICAgICAgIGNvbnNvbGUubG9nKHN0YXRlLnBsYXlsaXN0KQogICAgICAgIH0pCiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgc3RhdGUKICAgICAgICB9CiAgICB9LAogICAgY29tcG9uZW50czogewogICAgICAgIGxpc3R2aWV3VG9wLAogICAgICAgIHBsYXlMaXN0CiAgICB9Cn0K"},{"version":3,"sources":["/Users/gm/Desktop/音乐前端/musicapp/src/views/ListView.vue"],"names":[],"mappings":";AAOA,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACrC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrD,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;AAEnC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;IACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;QACJ,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACxB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;gBACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;YACb;QACJ,CAAC;QACD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;YAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACjB,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACvB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACxC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACrC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAChD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC9B,CAAC;QACD,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;YACH,CAAC,CAAC,CAAC,CAAC;QACR;IACJ,CAAC;IACD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;QACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACX;AACJ","file":"/Users/gm/Desktop/音乐前端/musicapp/src/views/ListView.vue","sourceRoot":"","sourcesContent":["<template>\n    <div class=\"listView\">\n        <listview-top :playlist=\"state.playlist\"></listview-top>\n        <play-list :playlist=\"state.playlist\"></play-list>\n    </div>\n</template>\n<script>\nimport {getPlaylistDetail} from '@/api/index.js'\nimport {onMounted,reactive} from 'vue'\nimport {useRoute} from 'vue-router'\nimport listviewTop from '@/components/listviewTop.vue'\nimport playList from '@/components/playList.vue'\nimport store from '@/store/index.js'\n\nexport default {\n    setup() {\n        const route = useRoute();\n        let state = reactive({\n            list:[],\n            playlist:{\n                creator: {},\n                tracks: []\n            }\n        })\n        onMounted(async () => {\n            console.log(route)\n            let id = route.query.id;\n            let result = await getPlaylistDetail(id);\n            state.playlist = result.data.playlist;\n            store.commit('setPlaylist',state.playlist.tracks)\n            console.log(result)\n            console.log(state.playlist)\n        })\n        return {\n            state\n        }\n    },\n    components: {\n        listviewTop,\n        playList\n    }\n}\n</script>"]}]}