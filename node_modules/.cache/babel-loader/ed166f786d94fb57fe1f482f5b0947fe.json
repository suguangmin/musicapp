{"remainingRequest":"/Users/gm/Desktop/音乐前端/musicapp/node_modules/babel-loader/lib/index.js!/Users/gm/Desktop/音乐前端/musicapp/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/Users/gm/Desktop/音乐前端/musicapp/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/gm/Desktop/音乐前端/musicapp/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/gm/Desktop/音乐前端/musicapp/src/views/ListView.vue?vue&type=template&id=8858edc6","dependencies":[{"path":"/Users/gm/Desktop/音乐前端/musicapp/src/views/ListView.vue","mtime":1628887020319},{"path":"/Users/gm/Desktop/音乐前端/musicapp/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/gm/Desktop/音乐前端/musicapp/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/gm/Desktop/音乐前端/musicapp/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":499162500000},{"path":"/Users/gm/Desktop/音乐前端/musicapp/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/gm/Desktop/音乐前端/musicapp/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgcmVzb2x2ZUNvbXBvbmVudCBhcyBfcmVzb2x2ZUNvbXBvbmVudCwgY3JlYXRlVk5vZGUgYXMgX2NyZWF0ZVZOb2RlLCBvcGVuQmxvY2sgYXMgX29wZW5CbG9jaywgY3JlYXRlQmxvY2sgYXMgX2NyZWF0ZUJsb2NrIH0gZnJvbSAidnVlIjsKdmFyIF9ob2lzdGVkXzEgPSB7CiAgY2xhc3M6ICJsaXN0VmlldyIKfTsKZXhwb3J0IGZ1bmN0aW9uIHJlbmRlcihfY3R4LCBfY2FjaGUsICRwcm9wcywgJHNldHVwLCAkZGF0YSwgJG9wdGlvbnMpIHsKICB2YXIgX2NvbXBvbmVudF9saXN0dmlld190b3AgPSBfcmVzb2x2ZUNvbXBvbmVudCgibGlzdHZpZXctdG9wIik7CgogIHZhciBfY29tcG9uZW50X3BsYXlfbGlzdCA9IF9yZXNvbHZlQ29tcG9uZW50KCJwbGF5LWxpc3QiKTsKCiAgcmV0dXJuIF9vcGVuQmxvY2soKSwgX2NyZWF0ZUJsb2NrKCJkaXYiLCBfaG9pc3RlZF8xLCBbX2NyZWF0ZVZOb2RlKF9jb21wb25lbnRfbGlzdHZpZXdfdG9wLCB7CiAgICBwbGF5bGlzdDogJHNldHVwLnN0YXRlLnBsYXlsaXN0CiAgfSwgbnVsbCwgOAogIC8qIFBST1BTICovCiAgLCBbInBsYXlsaXN0Il0pLCBfY3JlYXRlVk5vZGUoX2NvbXBvbmVudF9wbGF5X2xpc3QsIHsKICAgIHBsYXlsaXN0OiAkc2V0dXAuc3RhdGUucGxheWxpc3QKICB9LCBudWxsLCA4CiAgLyogUFJPUFMgKi8KICAsIFsicGxheWxpc3QiXSldKTsKfQ=="},{"version":3,"sources":["/Users/gm/Desktop/音乐前端/musicapp/src/views/ListView.vue"],"names":[],"mappings":";;AACS,EAAA,KAAK,EAAC;;;;;;;uBAAX,YAAA,CAGM,KAHN,EAAA,UAAA,EAGM,CAFF,YAAA,CAAwD,uBAAxD,EAAwD;AAAzC,IAAA,QAAQ,EAAE,MAAA,CAAA,KAAA,CAAM;AAAyB,GAAxD,E,IAAA,E;;AAAA,I,YAAA,CAEE,EADF,YAAA,CAAkD,oBAAlD,EAAkD;AAAtC,IAAA,QAAQ,EAAE,MAAA,CAAA,KAAA,CAAM;AAAsB,GAAlD,E,IAAA,E;;AAAA,I,YAAA,CACE,CAHN,C","sourcesContent":["<template>\n    <div class=\"listView\">\n        <listview-top :playlist=\"state.playlist\"></listview-top>\n        <play-list :playlist=\"state.playlist\"></play-list>\n    </div>\n</template>\n<script>\nimport {getPlaylistDetail} from '@/api/index.js'\nimport {onMounted,reactive} from 'vue'\nimport {useRoute} from 'vue-router'\nimport listviewTop from '@/components/listviewTop.vue'\nimport playList from '@/components/playList.vue'\nimport store from '@/store/index.js'\n\nexport default {\n    setup() {\n        const route = useRoute();\n        let state = reactive({\n            list:[],\n            playlist:{\n                creator: {},\n                tracks: []\n            }\n        })\n        onMounted(async () => {\n            console.log(route)\n            let id = route.query.id;\n            let result = await getPlaylistDetail(id);\n            state.playlist = result.data.playlist;\n            store.commit('setPlaylist',state.playlist.tracks)\n            console.log(result)\n            console.log(state.playlist)\n        })\n        return {\n            state\n        }\n    },\n    components: {\n        listviewTop,\n        playList\n    }\n}\n</script>"],"sourceRoot":""}]}